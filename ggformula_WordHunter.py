import streamlit as st
from nltk.corpus import wordnet
import nltk
from deep_translator import GoogleTranslator
from io import BytesIO
import pandas as pd

# NLTK родро░ро╡рпБ роПро▒рпНро▒роорпН
nltk.download('wordnet')
nltk.download('omw-1.4')

# рокроХрпНроХ роЕроорпИрокрпНрокрпБ
st.set_page_config(
    page_title="роЪрпКро▓рпН роорпЗроорпНрокроЯрпНроЯрпБ", 
    layout="wide",
    page_icon="ЁЯФН"
)

# CSS ро╡роЯро┐ро╡роорпИрокрпНрокрпБ
st.markdown("""
<style>
.word-container {
    height: 500px;
    overflow-y: scroll;
    padding: 10px;
    background: white;
    border-radius: 8px;
    border: 1px solid #e0e0e0;
    margin-top: 10px;
}
.word-item {
    padding: 8px;
    margin: 4px 0;
    border-left: 3px solid #4285F4;
    background: #f8f9fa;
}
</style>
""", unsafe_allow_html=True)

# родро▓рпИрокрпНрокрпБ рокроХрпБродро┐
st.markdown("""
<div style="text-align:center; background:#4285F4; padding:15px; border-radius:10px; color:white; margin-bottom:20px;">
    <h1 style="margin:0;">ЁЯФН роЪрпКро▓рпН роорпЗроорпНрокроЯрпНроЯрпБ</h1>
    <p style="margin:0;">роЗро▒рпБродро┐ роОро┤рпБродрпНродрпБроХро│ро╛ро▓рпН роЪрпКро▒рпНроХро│рпИродрпН родрпЗроЯро╡рпБроорпН</p>
</div>
""", unsafe_allow_html=True)

# роорпБроХрпНроХро┐роп рокроХрпБродро┐
col1, col2 = st.columns([1, 2])

with col1:
    # родрпЗроЯро▓рпН рокроХрпБродро┐
    st.subheader("роЪрпКро▓рпН родрпЗроЯро▓рпН")
    suffix = st.text_input("роЗро▒рпБродро┐ роОро┤рпБродрпНродрпБроХро│рпИ роЙро│рпНро│ро┐роЯро╡рпБроорпН", "ing")
    
    # ро╡ро╛ро░рпНродрпНродрпИ рокроЯрпНроЯро┐ропро▓рпН
    with st.spinner("роЪрпКро▒рпНроХро│рпН роПро▒рпНро▒рокрпНрокроЯрпБроХро┐ройрпНро▒рой..."):
        words = sorted(set(wordnet.all_lemma_names()), key=lambda x: (len(x), x.lower()))
        matches = [w for w in words if w.lower().endswith(suffix.lower())]
    
    st.write(f"роХро┐роЯрпИродрпНрод роЪрпКро▒рпНроХро│рпН: {len(matches)}")
    
    # ро╕рпНроХрпНро░рпЛро▓рпН роЪрпЖропрпНропрпБроорпН ро╡ро╛ро░рпНродрпНродрпИ рокроЯрпНроЯро┐ропро▓рпН
    st.markdown('<div class="word-container">', unsafe_allow_html=True)
    for word in matches[:1000]:  # роорпБродро▓рпН 1000 ро╡ро╛ро░рпНродрпНродрпИроХро│рпН роороЯрпНроЯрпБроорпН
        st.markdown(f'<div class="word-item">{word}</div>', unsafe_allow_html=True)
    st.markdown('</div>', unsafe_allow_html=True)

with col2:
    # рокрпКро░рпБро│рпН рокроХрпБродро┐
    selected_word = st.selectbox("роТро░рпБ роЪрпКро▓рпНро▓рпИродрпН родрпЗро░рпНроирпНродрпЖроЯрпБроХрпНроХро╡рпБроорпН", [""] + matches[:500])
    
    if selected_word:
        st.subheader(f"ЁЯУЪ {selected_word} - рокрпКро░рпБро│рпН")
        
        # рокрпКро░рпБро│рпНроХро│рпН
        synsets = wordnet.synsets(selected_word)
        if not synsets:
            st.info("роЗроирпНрод роЪрпКро▓рпНро▓рпБроХрпНроХрпБ рокрпКро░рпБро│рпН роХро┐роЯрпИроХрпНроХро╡ро┐ро▓рпНро▓рпИ")
        else:
            meanings = []
            for i, syn in enumerate(synsets[:3], 1):  # роорпБродро▓рпН 3 рокрпКро░рпБро│рпНроХро│рпН роороЯрпНроЯрпБроорпН
                eng = syn.definition()
                try:
                    tam = GoogleTranslator(source='en', target='ta').translate(eng)
                except:
                    tam = "роорпКро┤ро┐рокрпЖропро░рпНрокрпНрокрпБ родрпЛро▓рпНро╡ро┐ропрпБро▒рпНро▒родрпБ"
                
                meanings.append({
                    "роОрогрпН": i,
                    "роЖроЩрпНроХро┐ро▓ рокрпКро░рпБро│рпН": eng,
                    "родрооро┐ро┤рпН рокрпКро░рпБро│рпН": tam
                })
                
                with st.expander(f"рокрпКро░рпБро│рпН {i}"):
                    st.write(f"**роЖроЩрпНроХро┐ро▓роорпН:** {eng}")
                    st.write(f"**родрооро┐ро┤рпН:** {tam}")
            
            # Excel рокродро┐ро╡ро┐ро▒роХрпНроХроорпН
            if meanings:
                df = pd.DataFrame(meanings)
                towrite = BytesIO()
                df.to_excel(towrite, index=False, engine='openpyxl')
                towrite.seek(0)
                
                st.download_button(
                    "рокрпКро░рпБро│рпНроХро│рпИ рокродро┐ро╡ро┐ро▒роХрпНроХрпБроХ",
                    towrite,
                    file_name=f"{selected_word}_meanings.xlsx",
                    mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
                )

# роЕроЯро┐роХрпНроХрпБро▒ро┐рокрпНрокрпБ
st.markdown("""
<div style="text-align:center; margin-top:30px; color:#666; font-size:14px;">
    <p>роЗро▒рпБродро┐ роОро┤рпБродрпНродрпБроХро│рпИ роЙро│рпНро│ро┐роЯрпНроЯрпБ роЪрпКро▒рпНроХро│рпИродрпН родрпЗроЯро╡рпБроорпН</p>
</div>
""", unsafe_allow_html=True)
