import streamlit as st
import pandas as pd
from deep_translator import GoogleTranslator
from nltk.corpus import wordnet
import nltk
from io import BytesIO

# NLTK родро░ро╡рпБ роПро▒рпНро▒роорпН
nltk.download('wordnet')
nltk.download('omw-1.4')

# родройро┐рокрпНрокропройрпН ро╡роЯро┐ро╡роорпИрокрпНрокрпБ
st.set_page_config(
    page_title="роЪрпКро▓рпН роорпЗроорпНрокроЯрпНроЯрпБ", 
    layout="wide",
    page_icon="ЁЯУЪ"
)

# ро╡рогрпНрогроЩрпНроХро│рпН
COLORS = {
    'primary': '#4285F4',
    'secondary': '#34A853',
    'background': '#F8F9FA',
    'text': '#202124',
    'card': '#FFFFFF'
}

# CSS ро╡роЯро┐ро╡роорпИрокрпНрокрпБ
st.markdown(f"""
<style>
body {{
    background-color: {COLORS['background']};
    font-family: 'Arial', sans-serif;
}}
.word-container {{
    height: 400px;
    overflow-y: auto;
    padding: 15px;
    background: {COLORS['card']};
    border-radius: 10px;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
}}
.word-item {{
    padding: 10px;
    margin: 5px 0;
    border-left: 4px solid {COLORS['primary']};
    background: #f5f9ff;
}}
</style>
""", unsafe_allow_html=True)

# родро▓рпИрокрпНрокрпБ
st.markdown(f"""
<div style="background:{COLORS['primary']}; padding:20px; border-radius:10px; color:white;">
    <h1 style="text-align:center; margin:0;">ЁЯУЪ роЪрпКро▓рпН роорпЗроорпНрокроЯрпНроЯрпБ</h1>
    <p style="text-align:center; margin:0;">роЪрпКро▒рпНроХро│ро┐ройрпН роЗро▒рпБродро┐ роОро┤рпБродрпНродрпБроХро│рпИроХрпН роХрпКрогрпНроЯрпБ ро╡ро╛ро░рпНродрпНродрпИроХро│рпИроХрпН роХрогрпНроЯро▒ро┐роп</p>
</div>
""", unsafe_allow_html=True)

# роорпБроХрпНроХро┐роп ро╡ро░ро┐роЪрпИ
col1, col2 = st.columns([1, 2])

with col1:
    # родрпЗроЯро▓рпН рокроХрпБродро┐
    with st.container():
        st.subheader("ЁЯФН ро╡ро╛ро░рпНродрпНродрпИ родрпЗроЯро▓рпН")
        suffix = st.text_input("роЗро▒рпБродро┐ роОро┤рпБродрпНродрпБроХро│рпИ роЙро│рпНро│ро┐роЯро╡рпБроорпН", "ing")
        
        # ро╕рпНроХрпНро░рпЛро▓рпН роЪрпЖропрпНропрпБроорпН ро╡ро╛ро░рпНродрпНродрпИ рокроЯрпНроЯро┐ропро▓рпН
        st.markdown("<div class='word-container'>", unsafe_allow_html=True)
        
        words = sorted(set(wordnet.all_lemma_names()), key=lambda x: (len(x), x.lower()))
        matches = [w for w in words if w.lower().endswith(suffix.lower())][:500]
        
        for word in matches:
            st.markdown(f"<div class='word-item'>{word}</div>", unsafe_allow_html=True)
        
        st.markdown("</div>", unsafe_allow_html=True)

with col2:
    # рокрпКро░рпБро│рпН рооро▒рпНро▒рпБроорпН ро╡ро╛роХрпНроХро┐ропроорпН рокроХрпБродро┐
    selected_word = st.selectbox("роТро░рпБ роЪрпКро▓рпНро▓рпИродрпН родрпЗро░рпНроирпНродрпЖроЯрпБроХрпНроХро╡рпБроорпН", [""] + matches)
    
    if selected_word:
        st.subheader(f"ЁЯУЦ {selected_word} - рокрпКро░рпБро│рпН ро╡ро┐ро│роХрпНроХроорпН")
        
        # рокрпКро░рпБро│рпНроХро│рпН
        synsets = wordnet.synsets(selected_word)
        for i, syn in enumerate(synsets, 1):
            with st.expander(f"рокрпКро░рпБро│рпН {i}"):
                eng = syn.definition()
                tam = GoogleTranslator(source='en', target='ta').translate(eng)
                
                st.markdown(f"**роЖроЩрпНроХро┐ро▓роорпН:** {eng}")
                st.markdown(f"**родрооро┐ро┤рпН:** {tam}")
        
        # ро╡ро╛роХрпНроХро┐ропроорпН роЙро░рпБро╡ро╛роХрпНроХрпБ
        st.subheader("тЬНя╕П ро╡ро╛роХрпНроХро┐ропроорпН роЙро░рпБро╡ро╛роХрпНроХрпБ")
        sentence = st.text_area(f"'{selected_word}' роЪрпКро▓рпНро▓рпИрокрпН рокропройрпНрокроЯрпБродрпНродро┐ ро╡ро╛роХрпНроХро┐ропроорпН роОро┤рпБродрпБроХ")
        
        if st.button("ро╡ро╛роХрпНроХро┐ропродрпНродрпИ роЪрпЗрооро┐роХрпНроХ"):
            st.success("ро╡ро╛роХрпНроХро┐ропроорпН роЪрпЗрооро┐роХрпНроХрокрпНрокроЯрпНроЯродрпБ!")

# рокроХрпНроХродрпНродро┐ройрпН роЕроЯро┐рокрпНрокроХрпБродро┐
st.markdown("""
<div style="text-align:center; margin-top:20px; color:#666;">
    <p>ЁЯТб роЙродро╡ро┐: роХрпБро▒рпБроХро┐роп роЗро▒рпБродро┐ роОро┤рпБродрпНродрпБроХро│рпИ роорпБродро▓ро┐ро▓рпН роорпБропро▒рпНроЪро┐роХрпНроХро╡рпБроорпН</p>
</div>
""", unsafe_allow_html=True)
